---
interface Props {
  title: string;
  description: string;
  image?: string;
  type?: string;
  publishedDate?: string;
  modifiedDate?: string;
  author?: string;
  keywords?: string[];
  siteName?: string;
  isApp?: boolean;
  app?: {
    name: string;
    category: string;
    price?: string;
    icon?: string;
    developer?: string;
    description?: string;
  };
}

const { 
  title, 
  description,
  image = '/socialshare.png',
  type = 'website',
  publishedDate,
  modifiedDate,
  author = 'MacAppsHQ',
  keywords = [
    'mac apps',
    'macos applications',
    'mac software',
    'best mac apps',
    'mac app directory',
    'mac productivity apps',
    'mac tools',
    'mac utilities',
    'macos software directory'
  ],
  siteName = 'FindMacApps - A curated collection of native macOS apps',
  isApp = false,
  app
} = Astro.props;

// Ensure we have the correct site URL for Cloudflare
const siteUrl = import.meta.env.SITE || 'https://findmacapps.com';
const canonicalURL = new URL(Astro.url.pathname, siteUrl).toString();

// Ensure absolute URLs for images
const getAbsoluteUrl = (path: string) => {
  if (path.startsWith('http')) return path;
  return new URL(path, siteUrl).toString();
};

// Set up social sharing images
const socialImage = getAbsoluteUrl(image);
const appIcon = isApp && app?.icon ? getAbsoluteUrl(app.icon) : undefined;
const defaultSocialImage = getAbsoluteUrl('/socialshare.png');

// Use app icon for app pages, fallback to default social image
const finalImage = isApp && appIcon ? appIcon : defaultSocialImage;

// Generate page titles
const pageTitle = isApp 
  ? `${app?.name || title} - Download for Mac ${app?.price === 'Free' ? '(Free)' : ''}`
  : title === 'Mac App Directory' 
    ? 'FindMacApps - Curated Collection of Native macOS Apps'
    : `${title} - FindMacApps`;

const socialTitle = isApp
  ? `${app?.name || title} for Mac - Download Now`
  : title === 'Mac App Directory'
    ? 'FindMacApps - A curated collection of native macOS apps'
    : `${title} | FindMacApps - Native macOS apps`;

// Generate app-specific keywords if it's an app page
const appKeywords = isApp && app ? [
  app.name.toLowerCase(),
  `${app.name.toLowerCase()} mac`,
  `${app.name.toLowerCase()} macos`,
  `${app.name.toLowerCase()} download`,
  `${app.category.toLowerCase()} mac apps`,
  `best ${app.category.toLowerCase()} apps mac`,
  `mac ${app.category.toLowerCase()} software`,
  app.price === 'Free' ? 'free mac apps' : 'mac apps',
  'macos software'
] : [];

const finalKeywords = isApp ? [...new Set([...appKeywords, ...keywords])] : keywords;
---

<!-- Basic Meta Tags -->
<title>{pageTitle}</title>
<meta name="description" content={description}>
<meta name="keywords" content={finalKeywords.join(', ')}>
<meta name="author" content={author}>
<link rel="canonical" href={canonicalURL}>

<!-- Open Graph Meta Tags -->
<meta property="og:type" content={isApp ? 'product.item' : type}>
<meta property="og:title" content={socialTitle}>
<meta property="og:description" content={description}>
<meta property="og:image" content={finalImage}>
<meta property="og:image:alt" content={isApp ? `${app?.name || title} for Mac - App Icon` : `${siteName} - Mac App Directory`}>
<meta property="og:url" content={canonicalURL}>
<meta property="og:site_name" content={siteName}>
<meta property="og:locale" content="en_US">
{isApp && (
  <>
    <meta property="og:price:amount" content={app?.price === 'Free' ? '0' : app?.price?.replace('$', '')}>
    <meta property="og:price:currency" content="USD">
  </>
)}
{publishedDate && <meta property="article:published_time" content={publishedDate}>}
{modifiedDate && <meta property="article:modified_time" content={modifiedDate}>}

<!-- Twitter Card Meta Tags -->
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:site" content="@findmacapps">
<meta name="twitter:title" content={socialTitle}>
<meta name="twitter:description" content={description}>
<meta name="twitter:image" content={finalImage}>
<meta name="twitter:image:alt" content={isApp ? `${app?.name || title} for Mac - App Icon` : `${siteName} - Mac App Directory`}>
{isApp && <meta name="twitter:label1" content="Price">}
{isApp && <meta name="twitter:data1" content={app?.price || 'Free'}>}

<!-- Additional SEO Meta Tags -->
<meta name="robots" content="index, follow">
<meta name="googlebot" content="index, follow">
<meta name="theme-color" content="#0F172A">
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="apple-mobile-web-app-status-bar-style" content="black">

<!-- Structured Data -->
<script type="application/ld+json" set:html={JSON.stringify(
  isApp && app
    ? {
        "@context": "https://schema.org",
        "@type": "SoftwareApplication",
        "name": app.name,
        "operatingSystem": "macOS",
        "applicationCategory": app.category,
        "description": app.description || description,
        "offers": {
          "@type": "Offer",
          "price": app.price === "Free" ? "0" : app.price?.replace('$', ''),
          "priceCurrency": "USD",
          "availability": "https://schema.org/InStock"
        },
        "image": appIcon || defaultSocialImage,
        "author": {
          "@type": "Organization",
          "name": app.developer || "Unknown Developer"
        },
        "publisher": {
          "@type": "Organization",
          "name": siteName,
          "url": siteUrl,
          "logo": {
            "@type": "ImageObject",
            "url": getAbsoluteUrl('/logo.webp')
          }
        },
        "mainEntityOfPage": {
          "@type": "WebPage",
          "@id": canonicalURL
        }
      }
    : {
        "@context": "https://schema.org",
        "@type": "WebSite",
        "name": siteName,
        "description": description,
        "url": siteUrl,
        "image": defaultSocialImage,
        "publisher": {
          "@type": "Organization",
          "name": siteName,
          "logo": {
            "@type": "ImageObject",
            "url": getAbsoluteUrl('/logo.webp')
          }
        },
        "potentialAction": {
          "@type": "SearchAction",
          "target": `${siteUrl}/search?q={search_term_string}`,
          "query-input": "required name=search_term_string"
        }
      }
)}>
</script>

<!-- Favicon -->
<link rel="icon" type="image/webp" href={getAbsoluteUrl('/favicon.webp')}>
<link rel="apple-touch-icon" href={getAbsoluteUrl('/logo.webp')}>

<meta name="google-site-verification" content="7VfDoyuS5gTM1i867HgYDyXjV6ME1DyMHNfqTx_3t7c" />
